[project]
name = "diandian-logistics-api"
version = "0.1.0"
description = "AI驱动的物流管理数字化平台后端API"
authors = [{name = "AI团队", email = "dev@diandian.ai"}]
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    # Web框架
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "uvloop>=0.19.0",

    # AI框架 (替代LangChain)
    "instructor>=1.11.3",
    "openai>=1.58.1",
    "pydantic>=2.10.3",

    # 数据库
    "sqlalchemy>=2.0.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.0",  # for alembic migrations
    "alembic>=1.13.0",

    # 工作流引擎 (替代Temporal)
    "celery[redis]>=5.5.3",
    "redis>=5.0.0",

    # 实时通信
    "sse-starlette>=3.0.2",

    # 外部集成
    "httpx>=0.27.0",
    "python-multipart>=0.0.6",

    # 认证和安全
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",

    # 配置管理
    "python-dotenv>=1.0.0",
    "pydantic-settings>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.27.0",  # for testing
    "ruff>=0.1.0",
    "black>=23.0.0",
    "pre-commit>=3.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
select = ["E", "F", "I", "N", "W", "B"]
line-length = 88
target-version = "py311"

[tool.black]
line-length = 88
target-version = ['py311']