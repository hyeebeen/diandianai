openapi: 3.0.3
info:
  title: Authentication API
  description: 用户认证和授权API
  version: 1.0.0

paths:
  /api/auth/login:
    post:
      summary: 用户登录
      description: 使用用户名/邮箱和密码登录，或微信授权登录
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PasswordLoginRequest'
                - $ref: '#/components/schemas/WechatLoginRequest'
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: 认证失败
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/refresh:
    post:
      summary: 刷新访问令牌
      description: 使用refresh token获取新的access token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: 令牌刷新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'

  /api/auth/logout:
    post:
      summary: 用户登出
      description: 撤销用户令牌并清除会话
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 登出成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /api/auth/profile:
    get:
      summary: 获取用户资料
      description: 获取当前登录用户的详细信息
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 用户资料
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

components:
  schemas:
    PasswordLoginRequest:
      type: object
      required:
        - identifier
        - password
      properties:
        identifier:
          type: string
          description: 用户名或邮箱
          example: "user@example.com"
        password:
          type: string
          description: 密码
          example: "password123"

    WechatLoginRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: 微信授权码
          example: "wx_code_123"

    RefreshTokenRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
          description: 刷新令牌
          example: "refresh_token_xyz"

    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: 访问令牌
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refreshToken:
          type: string
          description: 刷新令牌
          example: "refresh_token_abc"
        expiresIn:
          type: integer
          description: 令牌过期时间（秒）
          example: 3600
        user:
          $ref: '#/components/schemas/UserProfile'

    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: 新的访问令牌
        expiresIn:
          type: integer
          description: 令牌过期时间（秒）

    UserProfile:
      type: object
      properties:
        id:
          type: string
          description: 用户ID
          example: "user_123"
        username:
          type: string
          description: 用户名
          example: "john_doe"
        email:
          type: string
          description: 邮箱
          example: "john@example.com"
        role:
          type: string
          enum: [admin, company_admin, dispatcher, driver, customer]
          description: 用户角色
        companyId:
          type: string
          description: 所属公司ID
          example: "company_456"
        companyName:
          type: string
          description: 公司名称
          example: "物流公司A"

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "操作成功"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: 错误代码
          example: "INVALID_CREDENTIALS"
        message:
          type: string
          description: 错误描述
          example: "用户名或密码错误"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT